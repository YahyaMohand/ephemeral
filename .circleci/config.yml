version: 2.1

commands:
  terraform_init:
    description: "Initialize Terraform"
    steps:
      - run:
          name: "Setup AWS Credentials"
          command: |
            echo "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Terraform Init"
          command: |
            terraform init \
              -backend-config="key=ephemeral-environments/pr-${CIRCLE_PULL_REQUEST##*/}/terraform.tfstate"

  terraform_plan:
    description: "Run Terraform Plan"
    steps:
      - run:
          name: "Terraform Plan"
          command: |
            terraform plan \
              -var-file="terraform.ephemeral.tfvars" \
              -var="pr_number=${CIRCLE_PULL_REQUEST##*/}" \
              -var="is_backend=true" \
              -out=tfplan

  terraform_apply:
    description: "Run Terraform Apply"
    steps:
      - run:
          name: "Terraform Apply"
          command: |
            terraform apply -auto-approve tfplan

  terraform_destroy:
    description: "Run Terraform Destroy"
    steps:
      - run:
          name: "Terraform Destroy"
          command: |
            terraform destroy \
              -auto-approve \
              -var-file="terraform.ephemeral.tfvars" \
              -var="pr_number=${CIRCLE_PULL_REQUEST##*/}" \
              -var="is_backend=true"

jobs:
  plan:
    docker:
      - image: hashicorp/terraform:1.7
        environment:
          AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    steps:
      - checkout
      - terraform_init
      - terraform_plan
      - persist_to_workspace:
          root: .
          paths:
            - .terraform
            - tfplan
            - "*.tf"
            - "*.tfvars"

  apply:
    docker:
      - image: hashicorp/terraform:1.7
        environment:
          AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    steps:
      - checkout
      - attach_workspace:
          at: .
      - terraform_init
      - terraform_apply

  cleanup:
    docker:
      - image: hashicorp/terraform:1.7
        environment:
          AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY} 
    steps:
      - checkout
      - terraform_init
      - terraform_destroy

# Define workflows
workflows:
  version: 2
  terraform_pr:
    jobs:
      - plan:
          context: aws-creds
          filters:
            branches:
              ignore: main
            
      - hold_apply:
          type: approval
          requires:
            - plan
          filters:
            branches:
              ignore: main
            
      - apply:
          requires:
            - hold_apply
          context: aws-creds
          filters:
            branches:
              ignore: main

      - cleanup:
          requires:
            - apply
          context: aws-creds
          filters:
            branches:
              ignore: main
